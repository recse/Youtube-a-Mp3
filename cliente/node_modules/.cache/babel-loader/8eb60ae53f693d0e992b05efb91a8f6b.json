{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport '../css/App.css';\nimport { PlayCircleFilled } from \"@material-ui/icons\";\nimport React, { useState } from \"react\"; // Backend url constant\n\nconst backend_uri = \"http://localhost:5000\";\n\nasync function downloadRequest(url, downloadFormat) {\n  // Send download request to custom url\n  let customUrl = `${backend_uri}/download?url=${url}&format=${downloadFormat}`;\n  const res = await fetch(customUrl);\n\n  try {\n    if (res.status === 200) {\n      // Open custom url to initiate download\n      window.location.assign(customUrl);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction App() {\n  _s();\n\n  // State\n  const [selectedDownloadOption, setSelectedDownloadOption] = useState(\"mp4\"); // Web page html\n}\n\n_s(App, \"CdViE9CPInn9gp0H1ApxxHDTZjM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/src/componentes/App.js"],"names":["PlayCircleFilled","React","useState","backend_uri","downloadRequest","url","downloadFormat","customUrl","res","fetch","status","window","location","assign","e","console","error","App","selectedDownloadOption","setSelectedDownloadOption"],"mappings":";;AAAA,OAAO,gBAAP;AACA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,MAAMC,WAAW,GAAG,uBAApB;;AAEA,eAAeC,eAAf,CAA+BC,GAA/B,EAAoCC,cAApC,EAAoD;AAClD;AACA,MAAIC,SAAS,GAAI,GAAEJ,WAAY,iBAAgBE,GAAI,WAAUC,cAAe,EAA5E;AACA,QAAME,GAAG,GAAG,MAAMC,KAAK,CAACF,SAAD,CAAvB;;AAEA,MAAI;AACF,QAAIC,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBN,SAAvB;AACD;AACF,GALD,CAKE,OAAOO,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF;;AAED,SAASG,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDjB,QAAQ,CAAC,KAAD,CAApE,CAFa,CAIb;AAED;;GANQe,G;;KAAAA,G;AAQT,eAAeA,GAAf","sourcesContent":["import '../css/App.css';\nimport { PlayCircleFilled } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\n\n// Backend url constant\nconst backend_uri = \"http://localhost:5000\"\n\nasync function downloadRequest(url, downloadFormat) {\n  // Send download request to custom url\n  let customUrl = `${backend_uri}/download?url=${url}&format=${downloadFormat}`;\n  const res = await fetch(customUrl);\n\n  try {\n    if (res.status === 200) {\n      // Open custom url to initiate download\n      window.location.assign(customUrl);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nfunction App() {\n  // State\n  const [selectedDownloadOption, setSelectedDownloadOption] = useState(\"mp4\");\n \n  // Web page html\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}