{"ast":null,"code":"export default function _iterableToArrayLimit(arr,i){var _i=arr&&(typeof Symbol!==\"undefined\"&&arr[Symbol.iterator]||arr[\"@@iterator\"]);if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"]!=null)_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}","map":{"version":3,"sources":["C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/src/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js"],"names":["_iterableToArrayLimit","arr","i","_i","Symbol","iterator","_arr","_n","_d","_s","_e","call","next","done","push","value","length","err"],"mappings":"AAAA,cAAe,SAASA,CAAAA,qBAAT,CAA+BC,GAA/B,CAAoCC,CAApC,CAAuC,CACpD,GAAIC,CAAAA,EAAE,CAAGF,GAAG,GAAK,MAAOG,CAAAA,MAAP,GAAkB,WAAlB,EAAiCH,GAAG,CAACG,MAAM,CAACC,QAAR,CAApC,EAAyDJ,GAAG,CAAC,YAAD,CAAjE,CAAZ,CAEA,GAAIE,EAAE,EAAI,IAAV,CAAgB,OAChB,GAAIG,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIC,CAAAA,EAAE,CAAG,IAAT,CACA,GAAIC,CAAAA,EAAE,CAAG,KAAT,CAEA,GAAIC,CAAAA,EAAJ,CAAQC,EAAR,CAEA,GAAI,CACF,IAAKP,EAAE,CAAGA,EAAE,CAACQ,IAAH,CAAQV,GAAR,CAAV,CAAwB,EAAEM,EAAE,CAAG,CAACE,EAAE,CAAGN,EAAE,CAACS,IAAH,EAAN,EAAiBC,IAAxB,CAAxB,CAAuDN,EAAE,CAAG,IAA5D,CAAkE,CAChED,IAAI,CAACQ,IAAL,CAAUL,EAAE,CAACM,KAAb,EAEA,GAAIb,CAAC,EAAII,IAAI,CAACU,MAAL,GAAgBd,CAAzB,CAA4B,MAC7B,CACF,CAAC,MAAOe,GAAP,CAAY,CACZT,EAAE,CAAG,IAAL,CACAE,EAAE,CAAGO,GAAL,CACD,CATD,OASU,CACR,GAAI,CACF,GAAI,CAACV,EAAD,EAAOJ,EAAE,CAAC,QAAD,CAAF,EAAgB,IAA3B,CAAiCA,EAAE,CAAC,QAAD,CAAF,GAClC,CAFD,OAEU,CACR,GAAIK,EAAJ,CAAQ,KAAME,CAAAA,EAAN,CACT,CACF,CAED,MAAOJ,CAAAA,IAAP,CACD","sourcesContent":["export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}"]},"metadata":{},"sourceType":"module"}