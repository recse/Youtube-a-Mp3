{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/esm/extends\";import merge from'./merge';function compose(){for(var _len=arguments.length,styles=new Array(_len),_key=0;_key<_len;_key++){styles[_key]=arguments[_key];}var fn=function fn(props){return styles.reduce(function(acc,style){var output=style(props);if(output){return merge(acc,output);}return acc;},{});};// Alternative approach that doesn't yield any performance gain.\n// const handlers = styles.reduce((acc, style) => {\n//   style.filterProps.forEach(prop => {\n//     acc[prop] = style;\n//   });\n//   return acc;\n// }, {});\n// const fn = props => {\n//   return Object.keys(props).reduce((acc, prop) => {\n//     if (handlers[prop]) {\n//       return merge(acc, handlers[prop](props));\n//     }\n//     return acc;\n//   }, {});\n// };\nfn.propTypes=process.env.NODE_ENV!=='production'?styles.reduce(function(acc,style){return _extends(acc,style.propTypes);},{}):{};fn.filterProps=styles.reduce(function(acc,style){return acc.concat(style.filterProps);},[]);return fn;}export default compose;","map":{"version":3,"sources":["C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/src/node_modules/@material-ui/system/esm/compose.js"],"names":["_extends","merge","compose","_len","arguments","length","styles","Array","_key","fn","props","reduce","acc","style","output","propTypes","process","env","NODE_ENV","filterProps","concat"],"mappings":"AAAA,MAAOA,CAAAA,QAAP,KAAqB,oCAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,QAASC,CAAAA,OAAT,EAAmB,CACjB,IAAK,GAAIC,CAAAA,IAAI,CAAGC,SAAS,CAACC,MAArB,CAA6BC,MAAM,CAAG,GAAIC,CAAAA,KAAJ,CAAUJ,IAAV,CAAtC,CAAuDK,IAAI,CAAG,CAAnE,CAAsEA,IAAI,CAAGL,IAA7E,CAAmFK,IAAI,EAAvF,CAA2F,CACzFF,MAAM,CAACE,IAAD,CAAN,CAAeJ,SAAS,CAACI,IAAD,CAAxB,CACD,CAED,GAAIC,CAAAA,EAAE,CAAG,QAASA,CAAAA,EAAT,CAAYC,KAAZ,CAAmB,CAC1B,MAAOJ,CAAAA,MAAM,CAACK,MAAP,CAAc,SAAUC,GAAV,CAAeC,KAAf,CAAsB,CACzC,GAAIC,CAAAA,MAAM,CAAGD,KAAK,CAACH,KAAD,CAAlB,CAEA,GAAII,MAAJ,CAAY,CACV,MAAOb,CAAAA,KAAK,CAACW,GAAD,CAAME,MAAN,CAAZ,CACD,CAED,MAAOF,CAAAA,GAAP,CACD,CARM,CAQJ,EARI,CAAP,CASD,CAVD,CAUG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAH,EAAE,CAACM,SAAH,CAAeC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,CAAwCZ,MAAM,CAACK,MAAP,CAAc,SAAUC,GAAV,CAAeC,KAAf,CAAsB,CACzF,MAAOb,CAAAA,QAAQ,CAACY,GAAD,CAAMC,KAAK,CAACE,SAAZ,CAAf,CACD,CAFsD,CAEpD,EAFoD,CAAxC,CAEN,EAFT,CAGAN,EAAE,CAACU,WAAH,CAAiBb,MAAM,CAACK,MAAP,CAAc,SAAUC,GAAV,CAAeC,KAAf,CAAsB,CACnD,MAAOD,CAAAA,GAAG,CAACQ,MAAJ,CAAWP,KAAK,CAACM,WAAjB,CAAP,CACD,CAFgB,CAEd,EAFc,CAAjB,CAGA,MAAOV,CAAAA,EAAP,CACD,CAED,cAAeP,CAAAA,OAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport merge from './merge';\n\nfunction compose() {\n  for (var _len = arguments.length, styles = new Array(_len), _key = 0; _key < _len; _key++) {\n    styles[_key] = arguments[_key];\n  }\n\n  var fn = function fn(props) {\n    return styles.reduce(function (acc, style) {\n      var output = style(props);\n\n      if (output) {\n        return merge(acc, output);\n      }\n\n      return acc;\n    }, {});\n  }; // Alternative approach that doesn't yield any performance gain.\n  // const handlers = styles.reduce((acc, style) => {\n  //   style.filterProps.forEach(prop => {\n  //     acc[prop] = style;\n  //   });\n  //   return acc;\n  // }, {});\n  // const fn = props => {\n  //   return Object.keys(props).reduce((acc, prop) => {\n  //     if (handlers[prop]) {\n  //       return merge(acc, handlers[prop](props));\n  //     }\n  //     return acc;\n  //   }, {});\n  // };\n\n\n  fn.propTypes = process.env.NODE_ENV !== 'production' ? styles.reduce(function (acc, style) {\n    return _extends(acc, style.propTypes);\n  }, {}) : {};\n  fn.filterProps = styles.reduce(function (acc, style) {\n    return acc.concat(style.filterProps);\n  }, []);\n  return fn;\n}\n\nexport default compose;"]},"metadata":{},"sourceType":"module"}