{"ast":null,"code":"/* eslint-disable import/prefer-default-export */ // Global index counter to preserve source order.\n// We create the style sheet during the creation of the component,\n// children are handled after the parents, so the order of style elements would be parent->child.\n// It is a problem though when a parent passes a className\n// which needs to override any child's styles.\n// StyleSheet of the child has a higher specificity, because of the source order.\n// So our solution is to render sheets them in the reverse order child->sheet, so\n// that parent has a higher specificity.\nvar indexCounter=-1e9;export function increment(){indexCounter+=1;if(process.env.NODE_ENV!=='production'){if(indexCounter>=0){console.warn(['Material-UI: You might have a memory leak.','The indexCounter is not supposed to grow that much.'].join('\\n'));}}return indexCounter;}","map":{"version":3,"sources":["C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/src/node_modules/@material-ui/styles/esm/makeStyles/indexCounter.js"],"names":["indexCounter","increment","process","env","NODE_ENV","console","warn","join"],"mappings":"AAAA,iD,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAIA,CAAAA,YAAY,CAAG,CAAC,GAApB,CACA,MAAO,SAASC,CAAAA,SAAT,EAAqB,CAC1BD,YAAY,EAAI,CAAhB,CAEA,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzC,GAAIJ,YAAY,EAAI,CAApB,CAAuB,CACrBK,OAAO,CAACC,IAAR,CAAa,CAAC,4CAAD,CAA+C,qDAA/C,EAAsGC,IAAtG,CAA2G,IAA3G,CAAb,EACD,CACF,CAED,MAAOP,CAAAA,YAAP,CACD","sourcesContent":["/* eslint-disable import/prefer-default-export */\n// Global index counter to preserve source order.\n// We create the style sheet during the creation of the component,\n// children are handled after the parents, so the order of style elements would be parent->child.\n// It is a problem though when a parent passes a className\n// which needs to override any child's styles.\n// StyleSheet of the child has a higher specificity, because of the source order.\n// So our solution is to render sheets them in the reverse order child->sheet, so\n// that parent has a higher specificity.\nvar indexCounter = -1e9;\nexport function increment() {\n  indexCounter += 1;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (indexCounter >= 0) {\n      console.warn(['Material-UI: You might have a memory leak.', 'The indexCounter is not supposed to grow that much.'].join('\\n'));\n    }\n  }\n\n  return indexCounter;\n}"]},"metadata":{},"sourceType":"module"}