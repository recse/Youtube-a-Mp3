[{"C:\\Users\\recse\\Desktop\\PORTFOLIOS\\descargador\\cliente\\src\\index.js":"1","C:\\Users\\recse\\Desktop\\PORTFOLIOS\\descargador\\cliente\\src\\componentes\\reportWebVitals.js":"2","C:\\Users\\recse\\Desktop\\PORTFOLIOS\\descargador\\cliente\\src\\componentes\\App.js":"3"},{"size":528,"mtime":1623349286029,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1623349274948,"results":"6","hashOfConfig":"5"},{"size":1968,"mtime":1623942354634,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ye6gez",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\recse\\Desktop\\PORTFOLIOS\\descargador\\cliente\\src\\index.js",[],["16","17"],"C:\\Users\\recse\\Desktop\\PORTFOLIOS\\descargador\\cliente\\src\\componentes\\reportWebVitals.js",[],"C:\\Users\\recse\\Desktop\\PORTFOLIOS\\descargador\\cliente\\src\\componentes\\App.js",["18"],"import '../css/App.css';\nimport { PlayCircleFilled } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport youtube from '../imagenes/youtube.svg';\n\n// URL backend (servidor)\nconst backend_uri = \"http://localhost:5000\"\n\nasync function downloadRequest(url, downloadFormat) {\n  // Envía la petición de descarga a una URL personalizada\n  let customUrl = `${backend_uri}/download?url=${url}&format=${downloadFormat}`;\n  const res = await fetch(customUrl);\n\n  try {\n    if (res.status === 200) {\n      // Abre la URL personalizada para iniciar la descarga\n      window.location.assign(customUrl);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n\n\nfunction App() {\n  // Estado\n  const [selectedDownloadOption, setSelectedDownloadOption] = useState(\"mp4\");\n  \n\n  // HTML\n  return (\n\n    <div className=\"App\">\n      <div className=\"container1\">\n            <img className =\"imagen1\" src={youtube} />\n            <h3> Introduzca la URL del vídeo de YouTube: </h3>\n      </div>\n      <div className=\"container2\">\n      <button id=\"downloadBtn\" onClick={() => downloadRequest(document.getElementById(\"url_input\").value, selectedDownloadOption)}>\n          <PlayCircleFilled className=\"playBtnIcon\" />\n        </button>\n\n        <div className=\"row\">\n          <input type=\"text\" id=\"url_input\" autoComplete=\"off\" placeholder=\"Paste video URL here\"></input>\n        </div>\n\n        <div className=\"row\" id=\"buttonRow\">\n          <button \n            className={selectedDownloadOption === \"mp4\" ? \"selectedDownloadOption\" : \"downloadOption\"} \n            onClick={() => {setSelectedDownloadOption(\"mp4\")}}\n          >\n            mp4\n          </button>\n\n          <button \n            className={selectedDownloadOption === \"mp3\" ? \"selectedDownloadOption\" : \"downloadOption\"} \n            onClick={() => {setSelectedDownloadOption(\"mp3\")}}\n          >\n            mp3\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":36,"column":13,"nodeType":"25","endLine":36,"endColumn":55},"no-native-reassign",["26"],"no-negated-in-lhs",["27"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]