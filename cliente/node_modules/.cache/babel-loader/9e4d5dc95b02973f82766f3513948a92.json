{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import'../css/App.css';import{PlayCircleFilled}from\"@material-ui/icons\";import React,{useState}from\"react\";import youtube from\"../imagenes/youtube.svg\";// URL backend (servidor)\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var backend_uri=\"http://localhost:5000\";function downloadRequest(_x,_x2){return _downloadRequest.apply(this,arguments);}function _downloadRequest(){_downloadRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(url,downloadFormat){var customUrl,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Envía la petición de descarga a una URL personalizada\ncustomUrl=\"\".concat(backend_uri,\"/download?url=\").concat(url,\"&format=\").concat(downloadFormat);_context.next=3;return fetch(customUrl);case 3:res=_context.sent;try{if(res.status===200){// Abre la URL personalizada para iniciar la descarga\nwindow.location.assign(customUrl);}}catch(e){console.error(e);}case 5:case\"end\":return _context.stop();}}},_callee);}));return _downloadRequest.apply(this,arguments);}function App(){// Estado\nvar _useState=useState(\"mp4\"),_useState2=_slicedToArray(_useState,2),selectedDownloadOption=_useState2[0],setSelectedDownloadOption=_useState2[1];// HTML\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container1\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"imagen1\",src:youtube}),/*#__PURE__*/_jsx(\"h3\",{children:\" Introduzca la URL del v\\xEDdeo de YouTube: \"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container2\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"downloadBtn\",onClick:function onClick(){return downloadRequest(document.getElementById(\"url_input\").value,selectedDownloadOption);},children:/*#__PURE__*/_jsx(PlayCircleFilled,{className:\"playBtnIcon\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"url_input\",autoComplete:\"off\",placeholder:\"Paste video URL here\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",id:\"buttonRow\",children:[/*#__PURE__*/_jsx(\"button\",{className:selectedDownloadOption===\"mp4\"?\"selectedDownloadOption\":\"downloadOption\",onClick:function onClick(){setSelectedDownloadOption(\"mp4\");},children:\"mp4\"}),/*#__PURE__*/_jsx(\"button\",{className:selectedDownloadOption===\"mp3\"?\"selectedDownloadOption\":\"downloadOption\",onClick:function onClick(){setSelectedDownloadOption(\"mp3\");},children:\"mp3\"})]})]})]});}export default App;","map":{"version":3,"sources":["C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/src/componentes/App.js"],"names":["PlayCircleFilled","React","useState","backend_uri","downloadRequest","url","downloadFormat","customUrl","fetch","res","status","window","location","assign","e","console","error","App","selectedDownloadOption","setSelectedDownloadOption","youtube","document","getElementById","value"],"mappings":"igBAAA,MAAO,gBAAP,CACA,OAASA,gBAAT,KAAiC,oBAAjC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,6CAGA;wFACA,GAAMC,CAAAA,WAAW,CAAG,uBAApB,C,QAEeC,CAAAA,e,6JAAf,iBAA+BC,GAA/B,CAAoCC,cAApC,oIACE;AACIC,SAFN,WAEqBJ,WAFrB,0BAEiDE,GAFjD,oBAE+DC,cAF/D,wBAGoBE,CAAAA,KAAK,CAACD,SAAD,CAHzB,QAGQE,GAHR,eAKE,GAAI,CACF,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACtB;AACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBN,SAAvB,EACD,CACF,CAAC,MAAOO,CAAP,CAAU,CACVC,OAAO,CAACC,KAAR,CAAcF,CAAd,EACD,CAZH,sD,kDAiBA,QAASG,CAAAA,GAAT,EAAe,CACb;AACA,cAA4Df,QAAQ,CAAC,KAAD,CAApE,wCAAOgB,sBAAP,eAA+BC,yBAA/B,eAGA;AACA,mBAEE,aAAK,SAAS,CAAC,KAAf,wBACE,aAAK,SAAS,CAAC,YAAf,wBACM,YAAK,SAAS,CAAE,SAAhB,CAA0B,GAAG,CAAEC,OAA/B,EADN,cAEM,oEAFN,GADF,cAKE,aAAK,SAAS,CAAC,YAAf,wBACA,eAAQ,EAAE,CAAC,aAAX,CAAyB,OAAO,CAAE,yBAAMhB,CAAAA,eAAe,CAACiB,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAAtC,CAA6CL,sBAA7C,CAArB,EAAlC,uBACI,KAAC,gBAAD,EAAkB,SAAS,CAAC,aAA5B,EADJ,EADA,cAKE,YAAK,SAAS,CAAC,KAAf,uBACE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,WAAtB,CAAkC,YAAY,CAAC,KAA/C,CAAqD,WAAW,CAAC,sBAAjE,EADF,EALF,cASE,aAAK,SAAS,CAAC,KAAf,CAAqB,EAAE,CAAC,WAAxB,wBACE,eACE,SAAS,CAAEA,sBAAsB,GAAK,KAA3B,CAAmC,wBAAnC,CAA8D,gBAD3E,CAEE,OAAO,CAAE,kBAAM,CAACC,yBAAyB,CAAC,KAAD,CAAzB,CAAiC,CAFnD,iBADF,cAQE,eACE,SAAS,CAAED,sBAAsB,GAAK,KAA3B,CAAmC,wBAAnC,CAA8D,gBAD3E,CAEE,OAAO,CAAE,kBAAM,CAACC,yBAAyB,CAAC,KAAD,CAAzB,CAAiC,CAFnD,iBARF,GATF,GALF,GAFF,CAkCD,CAED,cAAeF,CAAAA,GAAf","sourcesContent":["import '../css/App.css';\nimport { PlayCircleFilled } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport youtube from '../imagenes/youtube.svg';\n\n// URL backend (servidor)\nconst backend_uri = \"http://localhost:5000\"\n\nasync function downloadRequest(url, downloadFormat) {\n  // Envía la petición de descarga a una URL personalizada\n  let customUrl = `${backend_uri}/download?url=${url}&format=${downloadFormat}`;\n  const res = await fetch(customUrl);\n\n  try {\n    if (res.status === 200) {\n      // Abre la URL personalizada para iniciar la descarga\n      window.location.assign(customUrl);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n\n\nfunction App() {\n  // Estado\n  const [selectedDownloadOption, setSelectedDownloadOption] = useState(\"mp4\");\n  \n\n  // HTML\n  return (\n\n    <div className=\"App\">\n      <div className=\"container1\">\n            <img className =\"imagen1\" src={youtube} />\n            <h3> Introduzca la URL del vídeo de YouTube: </h3>\n      </div>\n      <div className=\"container2\">\n      <button id=\"downloadBtn\" onClick={() => downloadRequest(document.getElementById(\"url_input\").value, selectedDownloadOption)}>\n          <PlayCircleFilled className=\"playBtnIcon\" />\n        </button>\n\n        <div className=\"row\">\n          <input type=\"text\" id=\"url_input\" autoComplete=\"off\" placeholder=\"Paste video URL here\"></input>\n        </div>\n\n        <div className=\"row\" id=\"buttonRow\">\n          <button \n            className={selectedDownloadOption === \"mp4\" ? \"selectedDownloadOption\" : \"downloadOption\"} \n            onClick={() => {setSelectedDownloadOption(\"mp4\")}}\n          >\n            mp4\n          </button>\n\n          <button \n            className={selectedDownloadOption === \"mp3\" ? \"selectedDownloadOption\" : \"downloadOption\"} \n            onClick={() => {setSelectedDownloadOption(\"mp3\")}}\n          >\n            mp3\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}