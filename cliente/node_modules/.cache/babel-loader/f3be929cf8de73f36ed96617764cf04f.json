{"ast":null,"code":"import nested from'../ThemeProvider/nested';/**\n * This is the list of the style rule name we use as drop in replacement for the built-in\n * pseudo classes (:checked, :disabled, :focused, etc.).\n *\n * Why do they exist in the first place?\n * These classes are used at a specificity of 2.\n * It allows them to override previously definied styles as well as\n * being untouched by simple user overrides.\n */var pseudoClasses=['checked','disabled','error','focused','focusVisible','required','expanded','selected'];// Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\nexport default function createGenerateClassName(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _options$disableGloba=options.disableGlobal,disableGlobal=_options$disableGloba===void 0?false:_options$disableGloba,_options$productionPr=options.productionPrefix,productionPrefix=_options$productionPr===void 0?'jss':_options$productionPr,_options$seed=options.seed,seed=_options$seed===void 0?'':_options$seed;var seedPrefix=seed===''?'':\"\".concat(seed,\"-\");var ruleCounter=0;var getNextCounterId=function getNextCounterId(){ruleCounter+=1;if(process.env.NODE_ENV!=='production'){if(ruleCounter>=1e10){console.warn(['Material-UI: You might have a memory leak.','The ruleCounter is not supposed to grow that much.'].join(''));}}return ruleCounter;};return function(rule,styleSheet){var name=styleSheet.options.name;// Is a global static MUI style?\nif(name&&name.indexOf('Mui')===0&&!styleSheet.options.link&&!disableGlobal){// We can use a shorthand class name, we never use the keys to style the components.\nif(pseudoClasses.indexOf(rule.key)!==-1){return\"Mui-\".concat(rule.key);}var prefix=\"\".concat(seedPrefix).concat(name,\"-\").concat(rule.key);if(!styleSheet.options.theme[nested]||seed!==''){return prefix;}return\"\".concat(prefix,\"-\").concat(getNextCounterId());}if(process.env.NODE_ENV==='production'){return\"\".concat(seedPrefix).concat(productionPrefix).concat(getNextCounterId());}var suffix=\"\".concat(rule.key,\"-\").concat(getNextCounterId());// Help with debuggability.\nif(styleSheet.options.classNamePrefix){return\"\".concat(seedPrefix).concat(styleSheet.options.classNamePrefix,\"-\").concat(suffix);}return\"\".concat(seedPrefix).concat(suffix);};}","map":{"version":3,"sources":["C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/src/node_modules/@material-ui/styles/esm/createGenerateClassName/createGenerateClassName.js"],"names":["nested","pseudoClasses","createGenerateClassName","options","arguments","length","undefined","_options$disableGloba","disableGlobal","_options$productionPr","productionPrefix","_options$seed","seed","seedPrefix","concat","ruleCounter","getNextCounterId","process","env","NODE_ENV","console","warn","join","rule","styleSheet","name","indexOf","link","key","prefix","theme","suffix","classNamePrefix"],"mappings":"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","sourcesContent":["import nested from '../ThemeProvider/nested';\n/**\n * This is the list of the style rule name we use as drop in replacement for the built-in\n * pseudo classes (:checked, :disabled, :focused, etc.).\n *\n * Why do they exist in the first place?\n * These classes are used at a specificity of 2.\n * It allows them to override previously definied styles as well as\n * being untouched by simple user overrides.\n */\n\nvar pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected']; // Returns a function which generates unique class names based on counters.\n// When new generator function is created, rule counter is reset.\n// We need to reset the rule counter for SSR for each request.\n//\n// It's inspired by\n// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js\n\nexport default function createGenerateClassName() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$disableGloba = options.disableGlobal,\n      disableGlobal = _options$disableGloba === void 0 ? false : _options$disableGloba,\n      _options$productionPr = options.productionPrefix,\n      productionPrefix = _options$productionPr === void 0 ? 'jss' : _options$productionPr,\n      _options$seed = options.seed,\n      seed = _options$seed === void 0 ? '' : _options$seed;\n  var seedPrefix = seed === '' ? '' : \"\".concat(seed, \"-\");\n  var ruleCounter = 0;\n\n  var getNextCounterId = function getNextCounterId() {\n    ruleCounter += 1;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (ruleCounter >= 1e10) {\n        console.warn(['Material-UI: You might have a memory leak.', 'The ruleCounter is not supposed to grow that much.'].join(''));\n      }\n    }\n\n    return ruleCounter;\n  };\n\n  return function (rule, styleSheet) {\n    var name = styleSheet.options.name; // Is a global static MUI style?\n\n    if (name && name.indexOf('Mui') === 0 && !styleSheet.options.link && !disableGlobal) {\n      // We can use a shorthand class name, we never use the keys to style the components.\n      if (pseudoClasses.indexOf(rule.key) !== -1) {\n        return \"Mui-\".concat(rule.key);\n      }\n\n      var prefix = \"\".concat(seedPrefix).concat(name, \"-\").concat(rule.key);\n\n      if (!styleSheet.options.theme[nested] || seed !== '') {\n        return prefix;\n      }\n\n      return \"\".concat(prefix, \"-\").concat(getNextCounterId());\n    }\n\n    if (process.env.NODE_ENV === 'production') {\n      return \"\".concat(seedPrefix).concat(productionPrefix).concat(getNextCounterId());\n    }\n\n    var suffix = \"\".concat(rule.key, \"-\").concat(getNextCounterId()); // Help with debuggability.\n\n    if (styleSheet.options.classNamePrefix) {\n      return \"\".concat(seedPrefix).concat(styleSheet.options.classNamePrefix, \"-\").concat(suffix);\n    }\n\n    return \"\".concat(seedPrefix).concat(suffix);\n  };\n}"]},"metadata":{},"sourceType":"module"}