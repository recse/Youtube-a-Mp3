{"version":3,"sources":["imagenes/youtube.svg","componentes/App.js","componentes/reportWebVitals.js","index.js"],"names":["backend_uri","url","downloadFormat","a","customUrl","fetch","res","status","window","location","assign","e","console","error","App","useState","selectedDownloadOption","setSelectedDownloadOption","className","src","youtube","id","onClick","downloadRequest","document","getElementById","value","PlayCircleFilled","type","autoComplete","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sPAAe,MAA0B,oC,OCMnCA,EAAc,wB,4CAEpB,WAA+BC,EAAKC,GAApC,iBAAAC,EAAA,6DAEMC,EAFN,UAEqBJ,EAFrB,yBAEiDC,EAFjD,mBAE+DC,GAF/D,SAGoBG,MAAMD,GAH1B,OAGQE,EAHR,OAKE,IACqB,MAAfA,EAAIC,QAENC,OAAOC,SAASC,OAAON,GAEzB,MAAOO,GACPC,QAAQC,MAAMF,GAXlB,4C,sBA2DeG,MA1Cf,WAEE,MAA4DC,mBAAS,OAArE,mBAAOC,EAAP,KAA+BC,EAA/B,KAIA,OAEE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACM,qBAAKA,UAAW,UAAUC,IAAKC,IAC/B,iFAEN,sBAAKF,UAAU,aAAf,UACA,wBAAQG,GAAG,cAAcC,QAAS,kB,6CAAMC,CAAgBC,SAASC,eAAe,aAAaC,MAAOV,IAApG,SACI,cAACW,EAAA,EAAD,CAAkBT,UAAU,kBAG9B,qBAAKA,UAAU,MAAf,SACE,uBAAOU,KAAK,OAAOP,GAAG,YAAYQ,aAAa,MAAMC,YAAY,2BAGnE,sBAAKZ,UAAU,MAAMG,GAAG,YAAxB,UACE,wBACEH,UAAsC,QAA3BF,EAAmC,yBAA2B,iBACzEM,QAAS,WAAOL,EAA0B,QAF5C,iBAOA,wBACEC,UAAsC,QAA3BF,EAAmC,yBAA2B,iBACzEM,QAAS,WAAOL,EAA0B,QAF5C,2BC3CKc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASC,eAAe,SAM1BM,M","file":"static/js/main.2ea2716e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/youtube.a166d430.svg\";","import '../css/App.css';\nimport { PlayCircleFilled } from \"@material-ui/icons\";\nimport React, { useState } from \"react\";\nimport youtube from '../imagenes/youtube.svg';\n\n// URL backend (servidor)\nconst backend_uri = \"http://localhost:5000\"\n\nasync function downloadRequest(url, downloadFormat) {\n  // Envía la petición de descarga a una URL personalizada\n  let customUrl = `${backend_uri}/download?url=${url}&format=${downloadFormat}`;\n  const res = await fetch(customUrl);\n\n  try {\n    if (res.status === 200) {\n      // Abre la URL personalizada para iniciar la descarga\n      window.location.assign(customUrl);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n\n\nfunction App() {\n  // Estado\n  const [selectedDownloadOption, setSelectedDownloadOption] = useState(\"mp4\");\n  \n\n  // HTML\n  return (\n\n    <div className=\"App\">\n      <div className=\"container1\">\n            <img className =\"imagen1\" src={youtube} />\n            <h3> Introduzca la URL del vídeo de YouTube: </h3>\n      </div>\n      <div className=\"container2\">\n      <button id=\"downloadBtn\" onClick={() => downloadRequest(document.getElementById(\"url_input\").value, selectedDownloadOption)}>\n          <PlayCircleFilled className=\"playBtnIcon\" />\n        </button>\n\n        <div className=\"row\">\n          <input type=\"text\" id=\"url_input\" autoComplete=\"off\" placeholder=\"Paste video URL here\"></input>\n        </div>\n\n        <div className=\"row\" id=\"buttonRow\">\n          <button \n            className={selectedDownloadOption === \"mp4\" ? \"selectedDownloadOption\" : \"downloadOption\"} \n            onClick={() => {setSelectedDownloadOption(\"mp4\")}}\n          >\n            mp4\n          </button>\n\n          <button \n            className={selectedDownloadOption === \"mp3\" ? \"selectedDownloadOption\" : \"downloadOption\"} \n            onClick={() => {setSelectedDownloadOption(\"mp3\")}}\n          >\n            mp3\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport reportWebVitals from './componentes/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}