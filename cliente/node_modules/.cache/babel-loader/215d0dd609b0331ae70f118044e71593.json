{"ast":null,"code":"/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */export default function createChainedFunction(){for(var _len=arguments.length,funcs=new Array(_len),_key=0;_key<_len;_key++){funcs[_key]=arguments[_key];}return funcs.reduce(function(acc,func){if(func==null){return acc;}if(process.env.NODE_ENV!=='production'){if(typeof func!=='function'){console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');}}return function chainedFunction(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}acc.apply(this,args);func.apply(this,args);};},function(){});}","map":{"version":3,"sources":["C:/Users/recse/Desktop/PORTFOLIOS/descargador/cliente/src/node_modules/@material-ui/core/esm/utils/createChainedFunction.js"],"names":["createChainedFunction","_len","arguments","length","funcs","Array","_key","reduce","acc","func","process","env","NODE_ENV","console","error","chainedFunction","_len2","args","_key2","apply"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,cAAe,SAASA,CAAAA,qBAAT,EAAiC,CAC9C,IAAK,GAAIC,CAAAA,IAAI,CAAGC,SAAS,CAACC,MAArB,CAA6BC,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUJ,IAAV,CAArC,CAAsDK,IAAI,CAAG,CAAlE,CAAqEA,IAAI,CAAGL,IAA5E,CAAkFK,IAAI,EAAtF,CAA0F,CACxFF,KAAK,CAACE,IAAD,CAAL,CAAcJ,SAAS,CAACI,IAAD,CAAvB,CACD,CAED,MAAOF,CAAAA,KAAK,CAACG,MAAN,CAAa,SAAUC,GAAV,CAAeC,IAAf,CAAqB,CACvC,GAAIA,IAAI,EAAI,IAAZ,CAAkB,CAChB,MAAOD,CAAAA,GAAP,CACD,CAED,GAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzC,GAAI,MAAOH,CAAAA,IAAP,GAAgB,UAApB,CAAgC,CAC9BI,OAAO,CAACC,KAAR,CAAc,sFAAd,EACD,CACF,CAED,MAAO,SAASC,CAAAA,eAAT,EAA2B,CAChC,IAAK,GAAIC,CAAAA,KAAK,CAAGd,SAAS,CAACC,MAAtB,CAA8Bc,IAAI,CAAG,GAAIZ,CAAAA,KAAJ,CAAUW,KAAV,CAArC,CAAuDE,KAAK,CAAG,CAApE,CAAuEA,KAAK,CAAGF,KAA/E,CAAsFE,KAAK,EAA3F,CAA+F,CAC7FD,IAAI,CAACC,KAAD,CAAJ,CAAchB,SAAS,CAACgB,KAAD,CAAvB,CACD,CAEDV,GAAG,CAACW,KAAJ,CAAU,IAAV,CAAgBF,IAAhB,EACAR,IAAI,CAACU,KAAL,CAAW,IAAX,CAAiBF,IAAjB,EACD,CAPD,CAQD,CAnBM,CAmBJ,UAAY,CAAE,CAnBV,CAAP,CAoBD","sourcesContent":["/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nexport default function createChainedFunction() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  return funcs.reduce(function (acc, func) {\n    if (func == null) {\n      return acc;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof func !== 'function') {\n        console.error('Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.');\n      }\n    }\n\n    return function chainedFunction() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      acc.apply(this, args);\n      func.apply(this, args);\n    };\n  }, function () {});\n}"]},"metadata":{},"sourceType":"module"}